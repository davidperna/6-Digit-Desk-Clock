#include <Wire.h>
#include <Tlc5940.h>

int iDisplayPair = 0;
int seconds, minutes, hours;
long lTime = 0;
int iBrightness = 2800;
boolean bDisplayFirstDigit = true;
boolean bDigitSegments[10][8] = {  
  {
    0,1,1,1,1,1,1,0          }
  ,
  {
    0,0,0,1,1,0,0,0          }
  ,
  {
    1,0,1,1,0,1,1,0          }
  ,
  {
    1,0,1,1,1,1,0,0          }
  ,
  {
    1,1,0,1,1,0,0,0          }
  ,
  {
    1,1,1,0,1,1,0,0          }
  ,
  {
    1,1,1,0,1,1,1,0          }
  ,
  {
    0,0,1,1,1,0,0,0          }
  ,
  {
    1,1,1,1,1,1,1,0          }
  ,
  {
    1,1,1,1,1,1,0,0          }  
};

void setup()
{
  Wire.begin();
  Tlc.init(0);
  
  //Tlc must be cleared and a delay of at least 2ms added
  //otherwise display will not function properly
  Tlc.clear();
  delay(2);
  resetAnodes();
  
  pinMode(0, OUTPUT);
  pinMode(1, OUTPUT);
  pinMode(2, OUTPUT);
  
  
  /* //FOR SETTING THE TIME AND DATE 
  // Open I2C line in write mode
  Wire.beginTransmission(0x68);
  // Set the register pointer to (0x00)
  Wire.write((byte)0x00);
  // Set the seconds to zero.
  Wire.write(decToBcd(00));
  // Set the minutes to zero.
  Wire.write(decToBcd(53));
  // Set the hours to zero.
  Wire.write(decToBcd(22));
  // Set the weekDay to Sunday.
  Wire.write(decToBcd(1));
  // Set the monthsDay to one.
  Wire.write(decToBcd(1));
  // Set the months to July.
  Wire.write(decToBcd(7));
  // Set the year to 2001. (No leap-year).
  Wire.write(decToBcd(1));
  // End Write Transmission
  Wire.endTransmission();
  */
}

void loop()
{
  // Open I2C line in write mode
  Wire.beginTransmission(0x68);
  // Set the register pointer to (0x00)
  Wire.write((byte)0x00);
  // End Write Transmission
  Wire.endTransmission();

  // Open the I2C line in send mode
  Wire.requestFrom(0x68, 6);

  // Read the seconds from the first byte. (Mask to 0x7f).
  seconds = bcdToDec(Wire.read() & 0x7f);
  // Read the minutes from the second byte.
  minutes = bcdToDec(Wire.read());
  // Read the hours from the third byte. (Mask to 0x3f).
  hours = bcdToDec(Wire.read() & 0x3f);
  if (hours == 0) hours = 12;
  if (hours > 12) hours -= 12;
  
    if (iDisplayPair == 2){
      if(hours < 10) bDisplayFirstDigit = false;
      else bDisplayFirstDigit = true;
      setNumber((hours - hours%10)/10, hours%10);
    }
    if (iDisplayPair == 0)setNumber((minutes - minutes%10)/10, minutes%10);
    if (iDisplayPair == 1)setNumber((seconds - seconds%10)/10, seconds%10);
  
    //Turn on colon LEDs
    Tlc.set(14, iBrightness/8);
      
    //Turn the correct pair of digits on and and push TLC data
    digitalWrite(iDisplayPair, LOW);
    Tlc.update();
    
    //Display the pair of digits for 1ms; delay(1) FUNCTION DOES NOT WORK HERE
    lTime = millis();
    while(millis() - lTime < 1){}
      
    //TLC.clear likely not necessary here
    Tlc.clear();
      
    //Turn off pair of displays and clear the TLC data while before going to next pait
    resetAnodes();
    lTime = millis();
    while(millis() - lTime < 1){}
    
    iDisplayPair++;
    if(iDisplayPair > 2) iDisplayPair = 0;
    
    bDisplayFirstDigit = true;
}

void resetAnodes(){
  digitalWrite(0, HIGH);
  digitalWrite(1, HIGH);
  digitalWrite(2, HIGH);
}
byte bcdToDec(byte val)
{
  return ( (val / 16 * 10) + (val % 16) );
}

byte decToBcd(byte val) {
  return ((val/10*16) + (val%10));
}

void setNumber(int iNum1, int iNum2){
  for(int i = 0; i < 4; i ++){
    Tlc.set(i + 0, bDigitSegments[iNum1][i] * iBrightness * bDisplayFirstDigit); 
    Tlc.set(i + 4, bDigitSegments[iNum2][i] * iBrightness); 
  }
  for(int i = 0; i < 3; i ++){
    Tlc.set(i + 11, bDigitSegments[iNum1][i + 4] * iBrightness * bDisplayFirstDigit); 
    Tlc.set(i + 8, bDigitSegments[iNum2][i + 4] * iBrightness);
  }
}
